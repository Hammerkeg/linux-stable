stages:
  - build-zfs
  - build-bin
  - bump-version

variables:
  XZ_DEFAULTS: "-T 0"
  DEBIAN_FRONTEND: "noninteractive"

before_script:
  - BUILD_VERSION_VAR="BUILD_VERSION_`echo ${CI_COMMIT_BRANCH} | sed s/\\\./\_/g | sed s/\\-/\_/g`"
  - PACKAGE_NAME="${CI_COMMIT_BRANCH}-${!BUILD_VERSION_VAR}"
  - PACKAGE_FILE="kernel_${PACKAGE_NAME}.tar.xz"
  - ZFS_PACKAGE_FILE="zfs_${PACKAGE_NAME}.tar.xz"
  - PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/lx2k-kernel/${PACKAGE_NAME}"

build-zfs:
  stage: build-zfs
  image: hammerkeg/kernel_build
  rules:
    - if: $CI_COMMIT_SHORT_SHA
  script:
    - |
      if [ -d ".zfs" ]
      then
        cd .zfs
        git pull
      else
        git clone --depth=1 https://github.com/Hammerkeg/zfs.git .zfs
        cd .zfs
      fi
    - ./autogen.sh
    - ./configure --enable-systemd --with-linux=${CI_PROJECT_DIR} --with-linux-obj=${CI_PROJECT_DIR}
    - make -j`nproc --ignore=1` deb-utils deb-dkms
    - tar -cJf ${ZFS_PACKAGE_FILE} *.deb
    - rm *.deb
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${ZFS_PACKAGE_FILE} ${PACKAGE_REGISTRY_URL}/${ZFS_PACKAGE_FILE}

build-bin:
  stage: build-bin
  image: hammerkeg/kernel_build
  script:
    - touch .version && echo ${!BUILD_VERSION_VAR} > .version
    - make -j`nproc --ignore=1` bindeb-pkg
    - tar -cJf ${PACKAGE_FILE} ../*.deb
    - rm ../*.deb
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${PACKAGE_FILE} ${PACKAGE_REGISTRY_URL}/${PACKAGE_FILE}

bump-version:
  stage: bump-version
  image: hammerkeg/kernel_build
  needs:
    - job: build-bin
  rules:
    - if: $CI_COMMIT_SHORT_SHA
  script:
    - |
      ((${BUILD_VERSION_VAR}=${!BUILD_VERSION_VAR}+1))
      curl --request PUT --header "PRIVATE-TOKEN: ${API_TOKEN}" \
      ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/variables/${BUILD_VERSION_VAR} --form "value=${!BUILD_VERSION_VAR}"